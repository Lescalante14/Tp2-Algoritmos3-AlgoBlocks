@startuml

class Personaje{

    + cambiarPosicion(): void
    + ejecutarBloque(unBloque): void
}

abstract Bloque{
     + ejecutar(Personaje unPersonaje): void
}

class BloqueMoverIzquierda {
    + ejecutar(unPersonaje): void
}

class BloqueMoverADerecha {
    + ejecutar(unPersonaje): void
}

class BloqueMoverAbajo {
    + ejecutar(unPersonaje): void
}

class BloqueMoverArriba {
    + ejecutar(unPersonaje): void
}

class BloqueBajarLapiz {
    + ejecutar(unPersonaje): void
}

class BloqueSubirLapiz {
    + ejecutar(unPersonaje): void
}

interface EstadoLapiz {
    + dameEstado(): String
}

class EstadoActivado {
    + dameEstado(): String
}

class EstadoDesactivado {
    + dameEstado(): String
}

class Posicion {
    + derechaDe(unaPosicion): static Posicion
    + izquierdaDe(unaPosicion): static Posicion
    + arribaDe(unaPosicion): static Posicion
    + abajoDe(unaPosicion): static Posicion
}

Personaje o-- Bloque
Personaje "1" *-- "1" EstadoLapiz
Personaje "1" *-- "1" Posicion

Bloque <|-- BloqueMoverADerecha
Bloque <|--left BloqueMoverIzquierda
Bloque <|-- BloqueMoverAbajo
Bloque <|-- BloqueMoverArriba
Bloque <|-- BloqueBajarLapiz
Bloque <|--right BloqueSubirLapiz

EstadoLapiz <|.. EstadoActivado
EstadoLapiz <|.. EstadoDesactivado

@enduml